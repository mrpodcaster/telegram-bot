services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: deploy/database.env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.5-alpine
    env_file: .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  migrations:
     build: .
     env_file: .env
     command: python ./manage.py migrate
     depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
     build: .
     env_file:
       - .env
     ports:
       - "8000:8000"
     command: uvicorn mrpodcaster.asgi:application --port 8000
     depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
